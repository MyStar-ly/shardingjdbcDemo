#水平分库分表的配置

# shardingjdbc分片策略
# 配置数据源，给数据源起名称,
# 水平分库，配置两个数据源
spring.shardingsphere.datasource.names=c1, c2, u1

# 一个实体类对应两张表，覆盖
spring.main.allow-bean-definition-overriding=true

#配置第一个数据源具体内容，包含连接池，驱动，地址，用户名和密码
spring.shardingsphere.datasource.c1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.c1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.c1.url=jdbc:mysql://localhost:3306/edu_db_1?serverTimezone=GMT%2B8
spring.shardingsphere.datasource.c1.username=root
spring.shardingsphere.datasource.c1.password=12345678

#配置第二个数据源具体内容，包含连接池，驱动，地址，用户名和密码
spring.shardingsphere.datasource.c2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.c2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.c2.url=jdbc:mysql://localhost:3306/edu_db_2?serverTimezone=GMT%2B8
spring.shardingsphere.datasource.c2.username=root
spring.shardingsphere.datasource.c2.password=12345678


#配置第二个数据源具体内容，包含连接池，驱动，地址，用户名和密码
spring.shardingsphere.datasource.u1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.u1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.u1.url=jdbc:mysql://localhost:3306/user_db?serverTimezone=GMT%2B8
spring.shardingsphere.datasource.u1.username=root
spring.shardingsphere.datasource.u1.password=12345678


#指定数据库分布情况 数据库里表分布情况
spring.shardingsphere.sharding.tables.t_user.actual-data-nodes=u$->{1}.t_user

# 指定course表里面主键cid 生成策略  SNOWFLAKE
spring.shardingsphere.sharding.tables.t_user.key-generator.column=user_id
spring.shardingsphere.sharding.tables.t_user.key-generator.type=SNOWFLAKE

# 指定表的分片策略 约定cid是偶数添加course_1，是奇数添加course_2
spring.shardingsphere.sharding.tables.t_user.table-strategy.inline.sharding-column=user_id
spring.shardingsphere.sharding.tables.t_user.table-strategy.inline.algorithm-expression=t_user


#指定数据库分布情况 数据库里表分布情况
spring.shardingsphere.sharding.tables.course.actual-data-nodes=c$->{1..2}.course_$->{1..2}

# 指定course表里面主键cid 生成策略  SNOWFLAKE
spring.shardingsphere.sharding.tables.course.key-generator.column=cid
spring.shardingsphere.sharding.tables.course.key-generator.type=SNOWFLAKE

# 指定表的分片策略 约定cid是偶数添加course_1，是奇数添加course_2
spring.shardingsphere.sharding.tables.course.table-strategy.inline.sharding-column=cid
spring.shardingsphere.sharding.tables.course.table-strategy.inline.algorithm-expression=course_$->{cid % 2 + 1}


# 指定数据库的分片策略 约定user_id是偶数添加m1，是奇数添加m2
spring.shardingsphere.sharding.tables.course.database-strategy.inline.sharding-column=user_id
spring.shardingsphere.sharding.tables.course.database-strategy.inline..algorithm-expression=c$->{user_id % 2 + 1}

# 打开sql输出日志
spring.shardingsphere.props.sql.show=true